# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
  - task: NuGetToolInstaller@1

  # Restore NuGet packages
  - task: DotNetCoreCLI@2
    displayName: 'Restore packages'
    inputs:
      command: 'restore'
      feedsToUse: 'config'
      nugetConfigPath: 'NuGet.config'
      verbosityRestore: 'Normal'
  
  # Run unit tests
  - task: DotNetCoreCLI@2
    displayName: 'Run tests'
    inputs:
      command: 'test'
      projects: '$(solution)'
      arguments: '-c $(buildConfiguration) -p:OnlyAutoTests=true --no-restore'
      # /p:CollectCoverage=true /p:CoverletOutput="$coverageDir/data/" /p:MergeWith="$coverageDir/data/coverage.json" /p:CoverletOutputFormat=\"json,opencover\"

  # Build nuget
  - task: DotNetCoreCLI@2
    displayName: 'Build packages'
    inputs:
      command: 'custom'
      custom: 'pack'
      arguments: '-c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory) -p:Revision=$(Build.BuildId) --include-symbols --no-restore'
  
  # publish artifacts
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
  
  # Publish nuget
  - task: NuGetCommand@2
    displayName: 'Push packages'
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'markos'
  
  # Publish symbols
  - task: PublishSymbols@2
    displayName: 'Publish symbols'
    condition: ne(variables['Build.Reason'], 'PullRequest')
    inputs:
      SearchPattern: '**/bin/**/*.pdb'
      SymbolServerType: 'TeamServices'
      DetailedLog: false
